// Code generated by MockGen. DO NOT EDIT.
// Source: internal/shorturl/shorturl.go

// Package mock_shorturl is a generated GoMock package.
package mock_shorturl

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockShortenTool is a mock of ShortenTool interface.
type MockShortenTool struct {
	ctrl     *gomock.Controller
	recorder *MockShortenToolMockRecorder
}

// MockShortenToolMockRecorder is the mock recorder for MockShortenTool.
type MockShortenToolMockRecorder struct {
	mock *MockShortenTool
}

// NewMockShortenTool creates a new mock instance.
func NewMockShortenTool(ctrl *gomock.Controller) *MockShortenTool {
	mock := &MockShortenTool{ctrl: ctrl}
	mock.recorder = &MockShortenToolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenTool) EXPECT() *MockShortenToolMockRecorder {
	return m.recorder
}

// Shorten mocks base method.
func (m *MockShortenTool) Shorten(url string) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Shorten", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Shorten indicates an expected call of Shorten.
func (mr *MockShortenToolMockRecorder) Shorten(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Shorten", reflect.TypeOf((*MockShortenTool)(nil).Shorten), url)
}
